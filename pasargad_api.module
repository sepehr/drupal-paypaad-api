<?php
// $Id$

/**
 * @file
 * Contains Pasargad Bank Payment API implementations and helpers.
 */

/**
 * API function to create content's XML representation.
 *
 * @param $content
 *   An array of required content items as per defined in gateway docs.
 *   - time_stamp: Request date in "Y/m/d H:i:s" format. (optional)
 *   - invoice_date: Invoice date in an optional format. (optional)
 *   - invoice_number: Invoice number.
 *   - merchant_code: Store merchant code as per provided by Pasargad Bank.
 *   - terminal_code: Store terminal code as per provided by Pasargad Bank.
 *   - redirect_address: Operation success URL.
 *   - referer_address: Operation failure URL.
 *   - delivery_days: Number of days in which the products will be delivered.
 *   - total_amount: Order total amount.
 *   - buyer_name: Customer name.
 *   - buyer_tel: Customer contact tel.
 *   - delivery_address: Products delivery address.
 * @param $items
 *   Either an array of product arrays, or an array of product objects
 *   which will be injected into $content array as per defined in docs.
 *   - content: Product title.
 *   - count: Number of purchased products.
 *   - fee: Price of product unit.
 *   - amount: fee x count amount.
 *   - description: Product description.
 *
 * @return
 *   XML representation of passed arguments.
 *
 * @see http://developers.paypaad.ir/docs/readme.pdf
 */
function pasargad_xml($content, $items = array()) {

}

/**
 * API function to sign XML representation of content.
 *
 * @param $xml
 *   XML representation of required content as per defined in docs.
 * @param $private_key
 *   Accessible system path to private key file.
 *
 * @return
 *   Either signed XML content or FALSE on fail.
 *
 * @see pasargad_xml()
 * @see http://developers.paypaad.ir/docs/readme.pdf
 */
function pasargad_sign($xml, $private_key) {

}

/**
 * API function to request Pasargad Bank gateway.
 *
 * @param $gateway
 *   Pasargad Bank gateway controller URI.
 *
 * @return
 *   An array of request response.
 *
 * @see http://developers.paypaad.ir/docs/readme.pdf
 */
function pasargad_request($gateway = 'https://paypaad.bankpasargad.com/PaymentController') {

}

/**
 * API function to request Pasargad Bank gateway.
 *
 * @param $gateway
 *   Pasargad Bank gateway trace URI.
 *
 * @return
 *   An array of request response.
 *
 * @see http://developers.paypaad.ir/docs/readme.pdf
 */
function pasargad_trace($gateway = 'https://paypaad.bankpasargad.com/PaymentTrace') {

}

/**
 * Internal helper to perform a cURL POST request.
 *
 * @param $destination
 *   cURL destination URI.
 * @param $params
 *   Parameters to be sent in a HTTP POST operation,
 *   As per defined in CURLOPT_POSTFIELDS docs.
 *
 * @return
 *   Either the request response or FALSE on fail.
 *
 * @see pasargad_trace()
 * @see pasargad_request()
 * @see http://php.net/manual/en/function.curl-setopt.php
 */
function _pasargard_curl($destination, $params = '') {
  // cURL is a dependency.
  if (!extension_loaded('curl')) {
    return FALSE;
  }

  // Initiate cURL session, set options.
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, $destination);
  curl_setopt($curl, CURLOPT_HEADER, FALSE);
  curl_setopt($curl, CURLOPT_FAILONERROR, TRUE);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  // Follow any 'Location:' header,
  // CURLOPT_MAXREDIRS won't be set.
  curl_setopt($curl, CURLOPT_FOLLOWLOCATION, TRUE);
  // Set POST request options.
  curl_setopt($curl, CURLOPT_POST, TRUE);
  curl_setopt($curl, CURLOPT_POSTFIELDS, $params);
  // Run rabbit, run!
  $response = curl_exec($curl);

  // Close the session & return the response.
  curl_close($curl);
  return (string) $response;
}

/**
 * Internal helper to convert an array to its corresponding XML.
 *
 * @param $array
 *   An array to be converted to XML.
 * @param $root
 *   XML root node name.
 * @param $XMLElement
 *   If $array is a multi-dimension array, $xml contains
 *   previous level SimpleXMLElement object.
 * @param $object
 *   Whether to to return the XML object or its corresponding string.
 *
 * @return
 *   $array corresponding XML.
 *
 * @see http://php.net/manual/en/book.simplexml.php
 * @see http://www.php.net/manual/en/class.simplexmlelement.php
 */
function _pasargad_xml_build(&$array, $root = 'invoice', &$XMLElement = NULL, $object = FALSE) {
  // Turn off Zend Engine compatibility mode.
  if (ini_get('zend.ze1_compatibility_mode')) {
    ini_set('zend.ze1_compatibility_mode', 0);
  }

  // First time here? Instantiate a SimpleXMLElement object.
  if (is_null($XMLElement)) {
    $XMLElement = simplexml_load_string('<?xml version version="1.0" encoding="UTF-8"><' . $root . ' />');
  }

  // Walk though the array.
  foreach ($array as $key => $value) {
    // Remove XML illigal chars from $key.
    $key = preg_replace('/[^a-z0-9\-\_\.\:]/', '', $key);
    // For multi-dimension arrays, walk recursive.
    if (is_array($value)) {
      _pasargad_xml_build($value, $root, $XMLElement->addChild());
    }
    // Otherwise, simply append.
    else {
      $XMLElement->addChild($key, check_plain($value));
    }
  }

  // Return the generated XML as requested.
  return $object ? $XMLElement : $XMLElement->asXML();
}

